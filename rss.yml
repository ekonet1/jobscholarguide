      - name: Fetch Blogger RSS and convert to Jekyll posts
        run: |
          python - <<'EOF'
          import feedparser, os, re, datetime, hashlib
          feed = feedparser.parse("https://jobscholarguide.blogspot.com/feeds/posts/default?alt=rss")
          os.makedirs("_posts", exist_ok=True)

          for entry in feed.entries:
              # format date
              date = datetime.datetime(*entry.published_parsed[:6]).strftime("%Y-%m-%d")

              # safe slug
              slug_base = re.sub(r'[^a-z0-9]+', '-', entry.title.lower()).strip('-')
              slug_hash = hashlib.md5(entry.link.encode()).hexdigest()[:6]
              slug = f"{slug_base}-{slug_hash}"

              filename = f"_posts/{date}-{slug}.md"

              if not os.path.exists(filename):
                  description = entry.summary if hasattr(entry, "summary") else ""
                  content = ""
                  if hasattr(entry, "content"):
                      content = entry.content[0].value
                  elif description:
                      content = description

                  with open(filename, "w", encoding="utf-8") as f:
                      f.write("---\n")
                      f.write(f"layout: post\n")
                      f.write(f"title: \"{entry.title}\"\n")
                      f.write(f"date: {date}\n")
                      f.write(f"description: \"{description[:150].replace(chr(10), ' ')}\"\n")
                      f.write(f"permalink: /{slug}/\n")
                      f.write(f"canonical_url: {entry.link}\n")
                      f.write("---\n\n")
                      f.write(content + "\n")
                      f.write(f"\n\nOriginal Source: [{entry.link}]({entry.link})\n")
          EOF
